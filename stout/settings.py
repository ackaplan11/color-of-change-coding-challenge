"""
Django settings for stout project.

Generated by 'django-admin startproject' using Django 3.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path
import os

SITE_ID = 1

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '2k0(^5+qus_5@w48$4*8xx279y1c=j5j)!$1zi$dy3k@v^6n0$'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'templates_app',
    'ckeditor',
    'ckeditor_uploader',
    'django.contrib.sites',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',
    'sass_processor',
    'storages',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'stout.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
            'libraries':{
                'template_filters': 'layout.templatetags.template_filters',
            }
        },
    },
]

TEMPLATES_LOCATION = "templates/email/"

WSGI_APPLICATION = 'stout.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': os.getenv('DB_NAME'),
        'USER': os.getenv('DB_USER'),
        'PASSWORD': os.getenv('DB_PASSWORD'),
        'HOST': os.getenv('DB_HOST')
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
]

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

ACCOUNT_AUTHENTICATION_METHOD = 'username'

LOGIN_REDIRECT_URL = '/'

SOCIALACCOUNT_AUTO_SIGNUP = True


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/


STATIC_URL = '/static/'
SASS_PROCESSOR_ROOT = STATIC_URL
STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles/")
STATICFILES_DIRS = [
    os.path.join(os.path.join(BASE_DIR, "static/")),
    os.path.join(os.path.join(BASE_DIR, "node_modules")),
]
STATICFILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
    'sass_processor.finders.CssFinder',
]
# Passwords and keys

AK_USERNAME = os.environ.get('AK_USERNAME')
AK_PASSWORD = os.environ.get('AK_PASSWORD')
LITMUS_KEY = os.environ.get('LITMUS_KEY')

# Endpoints

TAG_ENDPOINT = 'tag'
MAILER_ENDPOINT = 'mailer'
MAILER_QUEUE_ENDPOINT = 'queue'
MAILER_STATUS_ENDPOINT = 'status'
AUTHUSERS_ENDPOINT = 'authuser'

# CSRF settings
CSRF_USE_SESSIONS = True

# Constant vars
TAGS = (
    ('OTH', 'Other'),
    ('OWN', 'Owner'),
    ('HELP', 'Helper'),
    ('DEPT', 'Department'),
    ('I', 'Issue'),
    ('ASK', 'Ask'),
    ('ENT', 'Entity'),
    ('TGT', 'Targeting'),
    ('CAMP', 'Camp')
)

TAG_SOURCE_NAMES = {
    'OWN': 'OWNER ',
    'HELP': 'HELPER ',
    'CAMP': 'CAMP '
}

MAILING_CLIENTS = {  # List from https://instant-api.litmus.com/v1/clients
    'ANDROID': 'ANDROID10GMAILAPP',
    'APPLE': 'APPMAIL14',
    'AOL': 'AOLONLINE',
    'GMAIL': 'CHROMEGMAILNEW',
    'IPAD': 'IPAD',
    'IPHONE': 'IPHONE12',
    'OFFICE365': 'OFFICE365',
    'OUTLOOK': 'OL2019',
    'YAHOO': 'YAHOO',
}

MAILER_FORM_PLACEHOLDERS = {
    'subject': 'Enter a subject line',
    'preview_text': 'Enter preview text to be shown below the subject.',
    'from_line': 'Enter format: "name" <email@actionkit.com>.',
    'reply_to': 'Enter an email for replies if different from from-line.',
    'body': 'Enter the main text of your mailer.',
    'tag_own': 'Enter at least one owner tag.',
    'tag_help': 'Enter a helper tag if needed.',
    'tag_dept': 'Enter at least one department tag.',
    'tag_i': 'Enter at least one issue tag.',
    'tag_ask': 'Enter at least one ask tag.',
    'tag_ent': 'Enter at least one entity tag.',
    'tag_tgt': 'Enter at least one targeting tag.',
    'tag_camp': 'Enter at least one camp tag.',
    'tag_oth': 'Enter any other tags needed.',
    'notes': 'Enter mailer notes.'
}

CKEDITOR_CONFIGS = {
    'default': {
        'extraPlugins': 'editorplaceholder,image2,button,clipboard,dialog,dialogui,lineutils,notification,toolbar,widget,widgetselection',
        'removePlugins': 'image',
    }
}

DEFAULT_AUTO_FIELD = 'django.db.models.AutoField'

APPROVERS_GROUP_NAME = "approvers"

CKEDITOR_ALLOW_NONIMAGE_FILES = False
CKEDITOR_UPLOAD_PATH = ''
CKEDITOR_RESTRICT_BY_DATE = False

DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'
AWS_QUERYSTRING_AUTH = False
AWS_ACCESS_KEY_ID = os.environ.get('AWS_ACCESS_KEY_ID')
AWS_SECRET_ACCESS_KEY = os.environ.get('AWS_SECRET_ACCESS_KEY')
AWS_STORAGE_BUCKET_NAME = 's3.colorofchange.org'
AWS_DEFAULT_ACL = 'public-read'
AWS_LOCATION = 'images/'
